/*This sample program is a script that takes two sorted arrays and merged them in a sorted way then later on the program search for the median 
of the new sorted array.
*/
class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        vector <int> merged;
        merged.reserve(nums1.size()+nums2.size());
       size_t i=0; 
       size_t j=0;
    //Sorting and Merge
       while(i<nums1.size() && j< nums2.size()){
        if(nums1[i]<=nums2[j]){
            merged.push_back(nums1[i]);
            i++;
        }
        else{
            merged.push_back(nums2[j]);
            j++;
        }
       }
       while(i<nums1.size()){
        merged.push_back(nums1[i]);
        i++;
       }

       while(j< nums2.size()){
        merged.push_back(nums2[j]);
        j++;
       }
       size_t n =merged.size();

        if(n==0){
            throw invalid_argument("Empty merged array");
        }
        if(n%2 ==1){
            return merged[n /2];
        }
        else{
            return (merged[n/2 -1]+ merged[n/2])/2.0;
        }

    }
};
